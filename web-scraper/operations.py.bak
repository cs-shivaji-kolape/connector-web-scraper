from connectors.core.connector import get_logger, ConnectorError
import os

logger = get_logger('web_scraper')

def get_url_content(config, params):
    try:
        url = params.get('url')
        if not url.startswith('https://') and not url.startswith('http://'):
            url = 'https://' + url
        connector_dir = os.path.dirname(os.path.realpath(__file__))
        chromedriver_path = connector_dir + "/chromedriver"
        from selenium import webdriver
        from selenium.webdriver.chrome.options import Options
        options = Options()
        options.binary_location = "/opt/google/chrome/google-chrome"
        options.add_argument('--headless')
        options.add_argument('--disable-gpu')
        options.add_argument('--ignore-certificate-errors')
        options.add_argument('--disable-dev-shm-usage')
        options.add_argument('--no-sandbox')

        driver = webdriver.Chrome(chrome_options=options, executable_path=chromedriver_path, service_args=['--verbose', '--log-path=/tmp/chromedriver.log'])
        driver.get(url)
        page_source = driver.page_source
        driver.quit()
        return page_source

    except Exception as exp:
        logger.exception('Error Getting URL Content: {}'.format(exp))
        raise ConnectorError('Error Getting URL Content: {}'.format(exp))

def _check_health(config):
    if not os.path.exists('/opt/google/chrome/google-chrome'):
        logger.exception('Error Initiating Web Driver')
        raise ConnectorError('Error Initiating Web Driver')


operations = {
    'get_url_content': get_url_content
}